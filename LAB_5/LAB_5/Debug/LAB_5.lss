
LAB_5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000366  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003ba  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003ec  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000042c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000726  00000000  00000000  0000044c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000676  00000000  00000000  00000b72  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000284  00000000  00000000  000011e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000146c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003d3  00000000  00000000  00001490  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00001863  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 b1 01 	jmp	0x362	; 0x362 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
  #define SERVO_MIN_POS 999 // 0 degrees
  #define SERVO_MAX_POS 4999 // 180 degrees

  int main(void)
  {
	  DDRB |= (1<<PB1); // Set PB1 as output
  80:	84 b1       	in	r24, 0x04	; 4
  82:	82 60       	ori	r24, 0x02	; 2
  84:	84 b9       	out	0x04, r24	; 4

	  ADMUX |= (1<<REFS0) | (1<<MUX0); // Set reference voltage to AVCC and select ADC1 as input
  86:	ec e7       	ldi	r30, 0x7C	; 124
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	81 64       	ori	r24, 0x41	; 65
  8e:	80 83       	st	Z, r24
	  ADCSRA |= (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1); // Enable ADC and set prescaler to 64
  90:	ea e7       	ldi	r30, 0x7A	; 122
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	80 81       	ld	r24, Z
  96:	86 68       	ori	r24, 0x86	; 134
  98:	80 83       	st	Z, r24

	  TCCR1A |= (1<<COM1A1) | (1<<WGM11); // Fast PWM, non-inverting mode
  9a:	e0 e8       	ldi	r30, 0x80	; 128
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	80 81       	ld	r24, Z
  a0:	82 68       	ori	r24, 0x82	; 130
  a2:	80 83       	st	Z, r24
	  TCCR1B |= (1<<WGM13) | (1<<WGM12) | (1<<CS11); // Fast PWM, prescaler = 8
  a4:	e1 e8       	ldi	r30, 0x81	; 129
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	8a 61       	ori	r24, 0x1A	; 26
  ac:	80 83       	st	Z, r24
	  ICR1=39999;   //20ms PWM period
  ae:	8f e3       	ldi	r24, 0x3F	; 63
  b0:	9c e9       	ldi	r25, 0x9C	; 156
  b2:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
  b6:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>

	  while (1){
		  ADCSRA |= (1<<ADSC); // Start ADC conversion
  ba:	ea e7       	ldi	r30, 0x7A	; 122
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	80 64       	ori	r24, 0x40	; 64
  c2:	80 83       	st	Z, r24
		  while (ADCSRA & (1<<ADSC)); // Esperar que la lecura termine
  c4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  c8:	86 fd       	sbrc	r24, 6
  ca:	fc cf       	rjmp	.-8      	; 0xc4 <main+0x44>
		  uint16_t servo_pos = ADC * 4.8866;// Mapeo
  cc:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  d0:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  d4:	80 e0       	ldi	r24, 0x00	; 0
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	0e 94 b6 00 	call	0x16c	; 0x16c <__floatunsisf>
  dc:	27 e0       	ldi	r18, 0x07	; 7
  de:	3f e5       	ldi	r19, 0x5F	; 95
  e0:	4c e9       	ldi	r20, 0x9C	; 156
  e2:	50 e4       	ldi	r21, 0x40	; 64
  e4:	0e 94 1c 01 	call	0x238	; 0x238 <__mulsf3>
  e8:	0e 94 87 00 	call	0x10e	; 0x10e <__fixunssfsi>
		  servo_pos = (servo_pos>=999)? servo_pos : 999;// Evitar que decienda más de 999 ya que es 0 grados
  ec:	67 3e       	cpi	r22, 0xE7	; 231
  ee:	83 e0       	ldi	r24, 0x03	; 3
  f0:	78 07       	cpc	r23, r24
  f2:	10 f4       	brcc	.+4      	; 0xf8 <main+0x78>
  f4:	67 ee       	ldi	r22, 0xE7	; 231
  f6:	73 e0       	ldi	r23, 0x03	; 3
		  OCR1A = servo_pos;
  f8:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  fc:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 100:	87 ea       	ldi	r24, 0xA7	; 167
 102:	91 e6       	ldi	r25, 0x61	; 97
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <main+0x84>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x8a>
 10a:	00 00       	nop
 10c:	d6 cf       	rjmp	.-84     	; 0xba <main+0x3a>

0000010e <__fixunssfsi>:
 10e:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <__fp_splitA>
 112:	88 f0       	brcs	.+34     	; 0x136 <__fixunssfsi+0x28>
 114:	9f 57       	subi	r25, 0x7F	; 127
 116:	98 f0       	brcs	.+38     	; 0x13e <__fixunssfsi+0x30>
 118:	b9 2f       	mov	r27, r25
 11a:	99 27       	eor	r25, r25
 11c:	b7 51       	subi	r27, 0x17	; 23
 11e:	b0 f0       	brcs	.+44     	; 0x14c <__fixunssfsi+0x3e>
 120:	e1 f0       	breq	.+56     	; 0x15a <__fixunssfsi+0x4c>
 122:	66 0f       	add	r22, r22
 124:	77 1f       	adc	r23, r23
 126:	88 1f       	adc	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	1a f0       	brmi	.+6      	; 0x132 <__fixunssfsi+0x24>
 12c:	ba 95       	dec	r27
 12e:	c9 f7       	brne	.-14     	; 0x122 <__fixunssfsi+0x14>
 130:	14 c0       	rjmp	.+40     	; 0x15a <__fixunssfsi+0x4c>
 132:	b1 30       	cpi	r27, 0x01	; 1
 134:	91 f0       	breq	.+36     	; 0x15a <__fixunssfsi+0x4c>
 136:	0e 94 15 01 	call	0x22a	; 0x22a <__fp_zero>
 13a:	b1 e0       	ldi	r27, 0x01	; 1
 13c:	08 95       	ret
 13e:	0c 94 15 01 	jmp	0x22a	; 0x22a <__fp_zero>
 142:	67 2f       	mov	r22, r23
 144:	78 2f       	mov	r23, r24
 146:	88 27       	eor	r24, r24
 148:	b8 5f       	subi	r27, 0xF8	; 248
 14a:	39 f0       	breq	.+14     	; 0x15a <__fixunssfsi+0x4c>
 14c:	b9 3f       	cpi	r27, 0xF9	; 249
 14e:	cc f3       	brlt	.-14     	; 0x142 <__fixunssfsi+0x34>
 150:	86 95       	lsr	r24
 152:	77 95       	ror	r23
 154:	67 95       	ror	r22
 156:	b3 95       	inc	r27
 158:	d9 f7       	brne	.-10     	; 0x150 <__fixunssfsi+0x42>
 15a:	3e f4       	brtc	.+14     	; 0x16a <__fixunssfsi+0x5c>
 15c:	90 95       	com	r25
 15e:	80 95       	com	r24
 160:	70 95       	com	r23
 162:	61 95       	neg	r22
 164:	7f 4f       	sbci	r23, 0xFF	; 255
 166:	8f 4f       	sbci	r24, 0xFF	; 255
 168:	9f 4f       	sbci	r25, 0xFF	; 255
 16a:	08 95       	ret

0000016c <__floatunsisf>:
 16c:	e8 94       	clt
 16e:	09 c0       	rjmp	.+18     	; 0x182 <__floatsisf+0x12>

00000170 <__floatsisf>:
 170:	97 fb       	bst	r25, 7
 172:	3e f4       	brtc	.+14     	; 0x182 <__floatsisf+0x12>
 174:	90 95       	com	r25
 176:	80 95       	com	r24
 178:	70 95       	com	r23
 17a:	61 95       	neg	r22
 17c:	7f 4f       	sbci	r23, 0xFF	; 255
 17e:	8f 4f       	sbci	r24, 0xFF	; 255
 180:	9f 4f       	sbci	r25, 0xFF	; 255
 182:	99 23       	and	r25, r25
 184:	a9 f0       	breq	.+42     	; 0x1b0 <__floatsisf+0x40>
 186:	f9 2f       	mov	r31, r25
 188:	96 e9       	ldi	r25, 0x96	; 150
 18a:	bb 27       	eor	r27, r27
 18c:	93 95       	inc	r25
 18e:	f6 95       	lsr	r31
 190:	87 95       	ror	r24
 192:	77 95       	ror	r23
 194:	67 95       	ror	r22
 196:	b7 95       	ror	r27
 198:	f1 11       	cpse	r31, r1
 19a:	f8 cf       	rjmp	.-16     	; 0x18c <__floatsisf+0x1c>
 19c:	fa f4       	brpl	.+62     	; 0x1dc <__floatsisf+0x6c>
 19e:	bb 0f       	add	r27, r27
 1a0:	11 f4       	brne	.+4      	; 0x1a6 <__floatsisf+0x36>
 1a2:	60 ff       	sbrs	r22, 0
 1a4:	1b c0       	rjmp	.+54     	; 0x1dc <__floatsisf+0x6c>
 1a6:	6f 5f       	subi	r22, 0xFF	; 255
 1a8:	7f 4f       	sbci	r23, 0xFF	; 255
 1aa:	8f 4f       	sbci	r24, 0xFF	; 255
 1ac:	9f 4f       	sbci	r25, 0xFF	; 255
 1ae:	16 c0       	rjmp	.+44     	; 0x1dc <__floatsisf+0x6c>
 1b0:	88 23       	and	r24, r24
 1b2:	11 f0       	breq	.+4      	; 0x1b8 <__floatsisf+0x48>
 1b4:	96 e9       	ldi	r25, 0x96	; 150
 1b6:	11 c0       	rjmp	.+34     	; 0x1da <__floatsisf+0x6a>
 1b8:	77 23       	and	r23, r23
 1ba:	21 f0       	breq	.+8      	; 0x1c4 <__floatsisf+0x54>
 1bc:	9e e8       	ldi	r25, 0x8E	; 142
 1be:	87 2f       	mov	r24, r23
 1c0:	76 2f       	mov	r23, r22
 1c2:	05 c0       	rjmp	.+10     	; 0x1ce <__floatsisf+0x5e>
 1c4:	66 23       	and	r22, r22
 1c6:	71 f0       	breq	.+28     	; 0x1e4 <__floatsisf+0x74>
 1c8:	96 e8       	ldi	r25, 0x86	; 134
 1ca:	86 2f       	mov	r24, r22
 1cc:	70 e0       	ldi	r23, 0x00	; 0
 1ce:	60 e0       	ldi	r22, 0x00	; 0
 1d0:	2a f0       	brmi	.+10     	; 0x1dc <__floatsisf+0x6c>
 1d2:	9a 95       	dec	r25
 1d4:	66 0f       	add	r22, r22
 1d6:	77 1f       	adc	r23, r23
 1d8:	88 1f       	adc	r24, r24
 1da:	da f7       	brpl	.-10     	; 0x1d2 <__floatsisf+0x62>
 1dc:	88 0f       	add	r24, r24
 1de:	96 95       	lsr	r25
 1e0:	87 95       	ror	r24
 1e2:	97 f9       	bld	r25, 7
 1e4:	08 95       	ret

000001e6 <__fp_split3>:
 1e6:	57 fd       	sbrc	r21, 7
 1e8:	90 58       	subi	r25, 0x80	; 128
 1ea:	44 0f       	add	r20, r20
 1ec:	55 1f       	adc	r21, r21
 1ee:	59 f0       	breq	.+22     	; 0x206 <__fp_splitA+0x10>
 1f0:	5f 3f       	cpi	r21, 0xFF	; 255
 1f2:	71 f0       	breq	.+28     	; 0x210 <__fp_splitA+0x1a>
 1f4:	47 95       	ror	r20

000001f6 <__fp_splitA>:
 1f6:	88 0f       	add	r24, r24
 1f8:	97 fb       	bst	r25, 7
 1fa:	99 1f       	adc	r25, r25
 1fc:	61 f0       	breq	.+24     	; 0x216 <__fp_splitA+0x20>
 1fe:	9f 3f       	cpi	r25, 0xFF	; 255
 200:	79 f0       	breq	.+30     	; 0x220 <__fp_splitA+0x2a>
 202:	87 95       	ror	r24
 204:	08 95       	ret
 206:	12 16       	cp	r1, r18
 208:	13 06       	cpc	r1, r19
 20a:	14 06       	cpc	r1, r20
 20c:	55 1f       	adc	r21, r21
 20e:	f2 cf       	rjmp	.-28     	; 0x1f4 <__fp_split3+0xe>
 210:	46 95       	lsr	r20
 212:	f1 df       	rcall	.-30     	; 0x1f6 <__fp_splitA>
 214:	08 c0       	rjmp	.+16     	; 0x226 <__fp_splitA+0x30>
 216:	16 16       	cp	r1, r22
 218:	17 06       	cpc	r1, r23
 21a:	18 06       	cpc	r1, r24
 21c:	99 1f       	adc	r25, r25
 21e:	f1 cf       	rjmp	.-30     	; 0x202 <__fp_splitA+0xc>
 220:	86 95       	lsr	r24
 222:	71 05       	cpc	r23, r1
 224:	61 05       	cpc	r22, r1
 226:	08 94       	sec
 228:	08 95       	ret

0000022a <__fp_zero>:
 22a:	e8 94       	clt

0000022c <__fp_szero>:
 22c:	bb 27       	eor	r27, r27
 22e:	66 27       	eor	r22, r22
 230:	77 27       	eor	r23, r23
 232:	cb 01       	movw	r24, r22
 234:	97 f9       	bld	r25, 7
 236:	08 95       	ret

00000238 <__mulsf3>:
 238:	0e 94 2f 01 	call	0x25e	; 0x25e <__mulsf3x>
 23c:	0c 94 a0 01 	jmp	0x340	; 0x340 <__fp_round>
 240:	0e 94 92 01 	call	0x324	; 0x324 <__fp_pscA>
 244:	38 f0       	brcs	.+14     	; 0x254 <__mulsf3+0x1c>
 246:	0e 94 99 01 	call	0x332	; 0x332 <__fp_pscB>
 24a:	20 f0       	brcs	.+8      	; 0x254 <__mulsf3+0x1c>
 24c:	95 23       	and	r25, r21
 24e:	11 f0       	breq	.+4      	; 0x254 <__mulsf3+0x1c>
 250:	0c 94 89 01 	jmp	0x312	; 0x312 <__fp_inf>
 254:	0c 94 8f 01 	jmp	0x31e	; 0x31e <__fp_nan>
 258:	11 24       	eor	r1, r1
 25a:	0c 94 16 01 	jmp	0x22c	; 0x22c <__fp_szero>

0000025e <__mulsf3x>:
 25e:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <__fp_split3>
 262:	70 f3       	brcs	.-36     	; 0x240 <__mulsf3+0x8>

00000264 <__mulsf3_pse>:
 264:	95 9f       	mul	r25, r21
 266:	c1 f3       	breq	.-16     	; 0x258 <__mulsf3+0x20>
 268:	95 0f       	add	r25, r21
 26a:	50 e0       	ldi	r21, 0x00	; 0
 26c:	55 1f       	adc	r21, r21
 26e:	62 9f       	mul	r22, r18
 270:	f0 01       	movw	r30, r0
 272:	72 9f       	mul	r23, r18
 274:	bb 27       	eor	r27, r27
 276:	f0 0d       	add	r31, r0
 278:	b1 1d       	adc	r27, r1
 27a:	63 9f       	mul	r22, r19
 27c:	aa 27       	eor	r26, r26
 27e:	f0 0d       	add	r31, r0
 280:	b1 1d       	adc	r27, r1
 282:	aa 1f       	adc	r26, r26
 284:	64 9f       	mul	r22, r20
 286:	66 27       	eor	r22, r22
 288:	b0 0d       	add	r27, r0
 28a:	a1 1d       	adc	r26, r1
 28c:	66 1f       	adc	r22, r22
 28e:	82 9f       	mul	r24, r18
 290:	22 27       	eor	r18, r18
 292:	b0 0d       	add	r27, r0
 294:	a1 1d       	adc	r26, r1
 296:	62 1f       	adc	r22, r18
 298:	73 9f       	mul	r23, r19
 29a:	b0 0d       	add	r27, r0
 29c:	a1 1d       	adc	r26, r1
 29e:	62 1f       	adc	r22, r18
 2a0:	83 9f       	mul	r24, r19
 2a2:	a0 0d       	add	r26, r0
 2a4:	61 1d       	adc	r22, r1
 2a6:	22 1f       	adc	r18, r18
 2a8:	74 9f       	mul	r23, r20
 2aa:	33 27       	eor	r19, r19
 2ac:	a0 0d       	add	r26, r0
 2ae:	61 1d       	adc	r22, r1
 2b0:	23 1f       	adc	r18, r19
 2b2:	84 9f       	mul	r24, r20
 2b4:	60 0d       	add	r22, r0
 2b6:	21 1d       	adc	r18, r1
 2b8:	82 2f       	mov	r24, r18
 2ba:	76 2f       	mov	r23, r22
 2bc:	6a 2f       	mov	r22, r26
 2be:	11 24       	eor	r1, r1
 2c0:	9f 57       	subi	r25, 0x7F	; 127
 2c2:	50 40       	sbci	r21, 0x00	; 0
 2c4:	9a f0       	brmi	.+38     	; 0x2ec <__mulsf3_pse+0x88>
 2c6:	f1 f0       	breq	.+60     	; 0x304 <__mulsf3_pse+0xa0>
 2c8:	88 23       	and	r24, r24
 2ca:	4a f0       	brmi	.+18     	; 0x2de <__mulsf3_pse+0x7a>
 2cc:	ee 0f       	add	r30, r30
 2ce:	ff 1f       	adc	r31, r31
 2d0:	bb 1f       	adc	r27, r27
 2d2:	66 1f       	adc	r22, r22
 2d4:	77 1f       	adc	r23, r23
 2d6:	88 1f       	adc	r24, r24
 2d8:	91 50       	subi	r25, 0x01	; 1
 2da:	50 40       	sbci	r21, 0x00	; 0
 2dc:	a9 f7       	brne	.-22     	; 0x2c8 <__mulsf3_pse+0x64>
 2de:	9e 3f       	cpi	r25, 0xFE	; 254
 2e0:	51 05       	cpc	r21, r1
 2e2:	80 f0       	brcs	.+32     	; 0x304 <__mulsf3_pse+0xa0>
 2e4:	0c 94 89 01 	jmp	0x312	; 0x312 <__fp_inf>
 2e8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__fp_szero>
 2ec:	5f 3f       	cpi	r21, 0xFF	; 255
 2ee:	e4 f3       	brlt	.-8      	; 0x2e8 <__mulsf3_pse+0x84>
 2f0:	98 3e       	cpi	r25, 0xE8	; 232
 2f2:	d4 f3       	brlt	.-12     	; 0x2e8 <__mulsf3_pse+0x84>
 2f4:	86 95       	lsr	r24
 2f6:	77 95       	ror	r23
 2f8:	67 95       	ror	r22
 2fa:	b7 95       	ror	r27
 2fc:	f7 95       	ror	r31
 2fe:	e7 95       	ror	r30
 300:	9f 5f       	subi	r25, 0xFF	; 255
 302:	c1 f7       	brne	.-16     	; 0x2f4 <__mulsf3_pse+0x90>
 304:	fe 2b       	or	r31, r30
 306:	88 0f       	add	r24, r24
 308:	91 1d       	adc	r25, r1
 30a:	96 95       	lsr	r25
 30c:	87 95       	ror	r24
 30e:	97 f9       	bld	r25, 7
 310:	08 95       	ret

00000312 <__fp_inf>:
 312:	97 f9       	bld	r25, 7
 314:	9f 67       	ori	r25, 0x7F	; 127
 316:	80 e8       	ldi	r24, 0x80	; 128
 318:	70 e0       	ldi	r23, 0x00	; 0
 31a:	60 e0       	ldi	r22, 0x00	; 0
 31c:	08 95       	ret

0000031e <__fp_nan>:
 31e:	9f ef       	ldi	r25, 0xFF	; 255
 320:	80 ec       	ldi	r24, 0xC0	; 192
 322:	08 95       	ret

00000324 <__fp_pscA>:
 324:	00 24       	eor	r0, r0
 326:	0a 94       	dec	r0
 328:	16 16       	cp	r1, r22
 32a:	17 06       	cpc	r1, r23
 32c:	18 06       	cpc	r1, r24
 32e:	09 06       	cpc	r0, r25
 330:	08 95       	ret

00000332 <__fp_pscB>:
 332:	00 24       	eor	r0, r0
 334:	0a 94       	dec	r0
 336:	12 16       	cp	r1, r18
 338:	13 06       	cpc	r1, r19
 33a:	14 06       	cpc	r1, r20
 33c:	05 06       	cpc	r0, r21
 33e:	08 95       	ret

00000340 <__fp_round>:
 340:	09 2e       	mov	r0, r25
 342:	03 94       	inc	r0
 344:	00 0c       	add	r0, r0
 346:	11 f4       	brne	.+4      	; 0x34c <__fp_round+0xc>
 348:	88 23       	and	r24, r24
 34a:	52 f0       	brmi	.+20     	; 0x360 <__fp_round+0x20>
 34c:	bb 0f       	add	r27, r27
 34e:	40 f4       	brcc	.+16     	; 0x360 <__fp_round+0x20>
 350:	bf 2b       	or	r27, r31
 352:	11 f4       	brne	.+4      	; 0x358 <__fp_round+0x18>
 354:	60 ff       	sbrs	r22, 0
 356:	04 c0       	rjmp	.+8      	; 0x360 <__fp_round+0x20>
 358:	6f 5f       	subi	r22, 0xFF	; 255
 35a:	7f 4f       	sbci	r23, 0xFF	; 255
 35c:	8f 4f       	sbci	r24, 0xFF	; 255
 35e:	9f 4f       	sbci	r25, 0xFF	; 255
 360:	08 95       	ret

00000362 <_exit>:
 362:	f8 94       	cli

00000364 <__stop_program>:
 364:	ff cf       	rjmp	.-2      	; 0x364 <__stop_program>
